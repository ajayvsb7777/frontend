{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 130
        },
        "id": "UqgDC6y5s-50",
        "outputId": "44539b76-dee4-4cd6-a7cd-cb188d358577"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-1-e04b75313481>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    (function() {\u001b[0m\n\u001b[0m                ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
          ]
        }
      ],
      "source": [
        "(function() {\n",
        "\n",
        "  var kanbanController = function($scope, $mdSidenav, $log, $mdDialog, $mdToast,\n",
        "    $location, $window, $interval, kanbanFactory, dragulaService) {\n",
        "\n",
        "    //Boards array\n",
        "    $scope.boards = [];\n",
        "    //Cards arrays for every category\n",
        "    $scope.readyCards = [];\n",
        "    $scope.inprogressCards = [];\n",
        "    $scope.pausedCards = [];\n",
        "    $scope.testingCards = [];\n",
        "    $scope.doneCards = [];\n",
        "\n",
        "    //FAB speed dial options\n",
        "    this.isOpen = false;\n",
        "    this.selectedMode = 'md-fling';\n",
        "    this.selectedDirection = 'up';\n",
        "\n",
        "    //Username and email\n",
        "    this.username = $window.sessionStorage.getItem('username');\n",
        "    this.email = $window.sessionStorage.getItem('email');\n",
        "\n",
        "    //Error dialog\n",
        "    $scope.showAlert = function() {\n",
        "    $mdDialog.show(\n",
        "      $mdDialog.alert()\n",
        "        .clickOutsideToClose(false)\n",
        "        .title('Error')\n",
        "        .textContent('There is a network error. Check your connection.')\n",
        "        .ariaLabel('Error dialog')\n",
        "        .ok('Ok')\n",
        "      );\n",
        "    };\n",
        "\n",
        "    //Get all boards for the user\n",
        "    $scope.getBoardsAndCards = function() {\n",
        "      kanbanFactory.getBoards($window.sessionStorage.getItem('userID'),\n",
        "      $window.sessionStorage.getItem('token'))\n",
        "      .success(function(response) {\n",
        "        if(response.success) {\n",
        "          //Action after getting the boards\n",
        "          angular.forEach(response.message, function(board){\n",
        "            $scope.boards.push(board);\n",
        "          });\n",
        "          if($scope.boards.length !== 0) { //if the user owns any board\n",
        "            $scope.getCards($scope.boards[0]);\n",
        "            $scope.actualBoard = $scope.boards[0];\n",
        "            $scope.toolbarTitle = $scope.boards[0].name;\n",
        "          } else { //if not, creates one\n",
        "            var jsonBoard = {\n",
        "              name: 'My kanban board',\n",
        "              description: 'This is your first kanban board!',\n",
        "              owner: $window.sessionStorage.getItem('userID')\n",
        "            };\n",
        "            $scope.addBoard(jsonBoard);\n",
        "            $scope.toolbarTitle = jsonBoard.name;\n",
        "          }\n",
        "        }\n",
        "      })\n",
        "      .error(function(response, status) {\n",
        "        $scope.showAlert();\n",
        "      });\n",
        "    };\n",
        "\n",
        "    //Check the new card category to save\n",
        "    $scope.checkCategory = function(card) {\n",
        "      switch (card.category) {\n",
        "        case 'ready':\n",
        "          $scope.readyCards.push(card);\n",
        "          break;\n",
        "        case 'inprogress':\n",
        "          $scope.inprogressCards.push(card);\n",
        "          break;\n",
        "        case 'paused':\n",
        "          $scope.pausedCards.push(card);\n",
        "          break;\n",
        "        case 'testing':\n",
        "          $scope.testingCards.push(card);\n",
        "          break;\n",
        "        case 'done':\n",
        "          $scope.doneCards.push(card);\n",
        "          break;\n",
        "      }\n",
        "    };\n",
        "\n",
        "    //Get the cards for a boards and show them using the factory\n",
        "    $scope.getCards = function(board) {\n",
        "      kanbanFactory.getCards(board._id, $window.sessionStorage.getItem('token'))\n",
        "        .success(function(response) {\n",
        "          //For every card, check the category to draw the board successfully\n",
        "          angular.forEach(response.message, function(card){\n",
        "            $scope.checkCategory(card);\n",
        "          });\n",
        "        })\n",
        "        .error(function(response, status) {\n",
        "          $scope.showAlert();\n",
        "        });\n",
        "    };\n",
        "\n",
        "    //Create new card\n",
        "    $scope.addCard = function(card) {\n",
        "      kanbanFactory.createCard($scope.actualBoard._id, card, $window.sessionStorage.getItem('token'))\n",
        "        .success(function(response) {\n",
        "          //Action after creating the card\n",
        "          $scope.checkCategory(response.message);\n",
        "        })\n",
        "        .error(function(response, status) {\n",
        "          $scope.showAlert();\n",
        "        });\n",
        "    };\n",
        "\n",
        "    //Edit card\n",
        "    $scope.editCard = function(card) {\n",
        "      kanbanFactory.editCard($scope.actualBoard._id, card, $window.sessionStorage.getItem('token'))\n",
        "        .success(function(response) {\n",
        "          //Action after editing card\n",
        "        })\n",
        "        .error(function(response, status) {\n",
        "          $scope.showAlert();\n",
        "        });;\n",
        "    };\n",
        "\n",
        "    //Delete card\n",
        "    $scope.deleteCard = function(index, card) {\n",
        "      kanbanFactory.deleteCard($scope.actualBoard._id, card, $window.sessionStorage.getItem('token'))\n",
        "        .success(function(response) {\n",
        "          if(card.category == 'ready')\n",
        "            $scope.readyCards.splice(index, 1);\n",
        "          else if(card.category == 'inprogress')\n",
        "            $scope.inprogressCards.splice(index, 1);\n",
        "          else if(card.category == 'paused')\n",
        "            $scope.pausedCards.splice(index, 1);\n",
        "          else if(card.category == 'testing')\n",
        "            $scope.testingCards.splice(index, 1);\n",
        "          else if(card.category == 'done')\n",
        "            $scope.doneCards.splice(index, 1);\n",
        "        })\n",
        "        .error(function(response, status) {\n",
        "          $scope.showAlert();\n",
        "        });;\n",
        "    };\n",
        "\n",
        "    $scope.clearBoard = function() {\n",
        "      //Clear cards arrays\n",
        "      $scope.readyCards = [];\n",
        "      $scope.inprogressCards = [];\n",
        "      $scope.pausedCards = [];\n",
        "      $scope.testingCards = [];\n",
        "      $scope.doneCards = [];\n",
        "    };\n",
        "\n",
        "    //Displays all cards for the selected board\n",
        "    $scope.switchBoard = function(board) {\n",
        "      $scope.clearBoard();\n",
        "      $scope.toolbarTitle = board.name; //set toolbar title\n",
        "      $scope.actualBoard = board;\n",
        "      $scope.getCards(board);\n",
        "      $scope.toggleLeft();\n",
        "    };\n",
        "\n",
        "    //Creates new board\n",
        "    $scope.addBoard = function(board) {\n",
        "      kanbanFactory.createBoard(board, $window.sessionStorage.getItem('token'))\n",
        "        .success(function(response) {\n",
        "          $scope.boards.push(response.message);\n",
        "        })\n",
        "        .error(function(response, status) {\n",
        "          $scope.showAlert();\n",
        "        });;\n",
        "    };\n",
        "\n",
        "    //Edit board\n",
        "    $scope.editBoard = function(board) {\n",
        "      kanbanFactory.editBoard(board, $window.sessionStorage.getItem('token'))\n",
        "        .success(function(response) {\n",
        "          //Action after editing board\n",
        "        })\n",
        "        .error(function(response, status) {\n",
        "          $scope.showAlert();\n",
        "        });;\n",
        "    };\n",
        "\n",
        "    //Delete board\n",
        "    $scope.deleteBoard = function(index, board) {\n",
        "      kanbanFactory.deleteBoard(board._id, $window.sessionStorage.getItem('token'))\n",
        "        .success(function(response) {\n",
        "            if($scope.boards.length !== 0) {\n",
        "              $scope.boards.splice(index, 1);\n",
        "              $scope.clearBoard();\n",
        "              $scope.getCards($scope.boards[0]);\n",
        "              $scope.actualBoard = $scope.boards[0];\n",
        "              $scope.toolbarTitle = $scope.boards[0].name;\n",
        "              $scope.toggleLeft();\n",
        "          }\n",
        "        })\n",
        "        .error(function(response, status) {\n",
        "          $scope.showAlert();\n",
        "        });;\n",
        "    };\n",
        "\n",
        "    $scope.$on('first-bag.drag', function (e, el, container, source) {\n",
        "      $scope.dragging = true;\n",
        "    });\n",
        "\n",
        "    //Handles moving cards to different containers, and editing and saving them\n",
        "    $scope.$on('first-bag.drop', function (e, el, container, source) {\n",
        "      $scope.dragging = false;\n",
        "      var card = el.scope().card;\n",
        "      if(container.parent().hasClass('ready') == true) {\n",
        "        card.category = 'ready';\n",
        "      }\n",
        "      else if(container.parent().hasClass('inprogress') == true) {\n",
        "        card.category = 'inprogress';\n",
        "      }\n",
        "      else if(container.parent().hasClass('paused') == true) {\n",
        "        card.category = 'paused';\n",
        "      }\n",
        "      else if(container.parent().hasClass('testing') == true) {\n",
        "        card.category = 'testing';\n",
        "      }\n",
        "      else if(container.parent().hasClass('done') == true) {\n",
        "        card.category = 'done';\n",
        "      }\n",
        "      $scope.editCard(card); //Edita la tarjeta y la guarda\n",
        "    });\n",
        "\n",
        "    //Left sidenav action\n",
        "    $scope.toggleLeft = function() {\n",
        "      $mdSidenav('left').toggle().then(function(){\n",
        "        //Action when toggle\n",
        "      });\n",
        "    };\n",
        "\n",
        "    //logout function\n",
        "    $scope.logoutDialog = function(ev) {\n",
        "      var dialog = $mdDialog.confirm()\n",
        "            .title('Close session')\n",
        "            .textContent('Are you sure you want to close the session?')\n",
        "            .ariaLabel('Logout')\n",
        "            .targetEvent(ev)\n",
        "            .ok('ok')\n",
        "            .cancel('cancel');\n",
        "      $mdDialog.show(dialog).then(function() {\n",
        "        kanbanFactory.logout()\n",
        "          .success(function(response) {\n",
        "            //remove the user token and user ID from the sessionStorage\n",
        "            $window.sessionStorage.removeItem('token');\n",
        "            $window.sessionStorage.removeItem('userID');\n",
        "            //go to login page\n",
        "            $location.path('/login');\n",
        "          })\n",
        "          .error(function(response, status) {\n",
        "            $scope.showAlert();\n",
        "          });;\n",
        "      }, function() {\n",
        "        //cancel\n",
        "      });\n",
        "    };\n",
        "\n",
        "    //Show the dialog to create a new card\n",
        "    $scope.addNewCardDialog = function(ev) {\n",
        "      var dialog = $mdDialog.prompt()\n",
        "            .title('Create new card')\n",
        "            .textContent('Enter the description')\n",
        "            .placeholder('description')\n",
        "            .ariaLabel('Card description')\n",
        "            .targetEvent(ev)\n",
        "            .ok('save')\n",
        "            .cancel('cancel');\n",
        "      $mdDialog.show(dialog).then(function(result) {\n",
        "        var card = { content: result, category: 'ready' };\n",
        "        if(card.content != '' && card.content != undefined) {\n",
        "          $scope.addCard(card); //Creates new card\n",
        "        } else {\n",
        "          $mdToast.show($mdToast.simple().textContent(\"Card was not created\"));\n",
        "        }\n",
        "      }, function() {\n",
        "        //Empty description - Doesn't create card\n",
        "        $mdToast.show($mdToast.simple().textContent(\"Card was not created\"));\n",
        "      });\n",
        "    };\n",
        "\n",
        "    //Show the dialog to edit a card\n",
        "    $scope.editCardDialog = function(ev, index, card) {\n",
        "      var dialog = $mdDialog.prompt()\n",
        "            .title('Edit card')\n",
        "            .placeholder('description')\n",
        "            .initialValue(card.content)\n",
        "            .ariaLabel('Card description')\n",
        "            .targetEvent(ev)\n",
        "            .ok('save')\n",
        "            .cancel('cancel');\n",
        "      $mdDialog.show(dialog).then(function(result) {\n",
        "        if(result != '' && result != undefined) {\n",
        "          card.content = result;\n",
        "          $scope.editCard(card); //Edit card\n",
        "        } else {\n",
        "          $mdToast.show($mdToast.simple().textContent(\"Card was not edited\"));\n",
        "        }\n",
        "      }, function() {\n",
        "        //Empty description - Doesn't create card\n",
        "        $mdToast.show($mdToast.simple().textContent(\"Card was not edited\"));\n",
        "      });\n",
        "    };\n",
        "\n",
        "    //Delete card in $scope array and in database\n",
        "    $scope.deleteCardDialog = function(index, card) {\n",
        "      var dialog = $mdDialog.confirm()\n",
        "            .title('Delete card')\n",
        "            .textContent('Are you sure you want to delete this card?')\n",
        "            .ariaLabel('Delete card')\n",
        "            .ok('ok')\n",
        "            .cancel('cancel');\n",
        "      $mdDialog.show(dialog).then(function() {\n",
        "        $scope.deleteCard(index, card);\n",
        "      }, function() {\n",
        "        //cancel\n",
        "      });\n",
        "    };\n",
        "\n",
        "    //Show the dialog to create a new board\n",
        "    $scope.addNewBoardDialog = function(ev) {\n",
        "      var board = { owner: $window.sessionStorage.getItem('userID') };\n",
        "      var boardTitleDialog = $mdDialog.prompt()\n",
        "            .title('Board title')\n",
        "            .placeholder('title')\n",
        "            .ariaLabel('Board title')\n",
        "            .targetEvent(ev)\n",
        "            .ok('next')\n",
        "            .cancel('cancel');\n",
        "      var boardDescriptionDialog = $mdDialog.prompt()\n",
        "            .title('Board description')\n",
        "            .placeholder('description')\n",
        "            .ariaLabel('Board description')\n",
        "            .targetEvent(ev)\n",
        "            .ok('save')\n",
        "            .cancel('cancel');\n",
        "      //Show board title dialog\n",
        "      $mdDialog.show(boardTitleDialog).then(function(resultTitle) {\n",
        "        if(resultTitle != '' && resultTitle != undefined) {\n",
        "          //Show board description dialog\n",
        "          $mdDialog.show(boardDescriptionDialog).then(function(resultDescription) {\n",
        "            if(resultDescription != '' && resultDescription != undefined) {\n",
        "              //Save board\n",
        "              board.name = resultTitle;\n",
        "              board.description = resultDescription;\n",
        "              $scope.addBoard(board);\n",
        "            } else {\n",
        "              $mdToast.show($mdToast.simple().textContent(\"Board was not created\"));\n",
        "            }\n",
        "          }, function() {\n",
        "            $mdToast.show($mdToast.simple().textContent(\"Board was not created\"));\n",
        "          });\n",
        "        } else {\n",
        "          $mdToast.show($mdToast.simple().textContent(\"Board was not created\"));\n",
        "        }\n",
        "      }, function() {\n",
        "        $mdToast.show($mdToast.simple().textContent(\"Board was not created\"));\n",
        "      });\n",
        "    };\n",
        "\n",
        "    //Edit board name dialog\n",
        "    $scope.editBoardNameDialog = function(ev, index, board) {\n",
        "      var dialog = $mdDialog.prompt()\n",
        "            .title('Edit board name')\n",
        "            .placeholder('board name')\n",
        "            .initialValue(board.name)\n",
        "            .ariaLabel('Board name')\n",
        "            .targetEvent(ev)\n",
        "            .ok('save')\n",
        "            .cancel('cancel');\n",
        "      $mdDialog.show(dialog).then(function(result) {\n",
        "        if(result != '' && result != undefined) {\n",
        "          board.name = result;\n",
        "          $scope.editBoard(board); //Edit card\n",
        "        } else {\n",
        "          $mdToast.show($mdToast.simple().textContent(\"Board was not edited\"));\n",
        "        }\n",
        "      }, function() {\n",
        "        //Empty description - Doesn't create card\n",
        "        $mdToast.show($mdToast.simple().textContent(\"Board was not edited\"));\n",
        "      });\n",
        "    };\n",
        "\n",
        "    //Edit board description dialog\n",
        "    $scope.editBoardDescriptionDialog = function(ev, index, board) {\n",
        "      var dialog = $mdDialog.prompt()\n",
        "            .title('Edit board description')\n",
        "            .placeholder('board description')\n",
        "            .initialValue(board.description)\n",
        "            .ariaLabel('Board description')\n",
        "            .targetEvent(ev)\n",
        "            .ok('save')\n",
        "            .cancel('cancel');\n",
        "      $mdDialog.show(dialog).then(function(result) {\n",
        "        if(result != '' && result != undefined) {\n",
        "          board.description = result;\n",
        "          $scope.editBoard(board); //Edit card\n",
        "        } else {\n",
        "          $mdToast.show($mdToast.simple().textContent(\"Board was not edited\"));\n",
        "        }\n",
        "      }, function() {\n",
        "        //Empty description - Doesn't create card\n",
        "        $mdToast.show($mdToast.simple().textContent(\"Board was not edited\"));\n",
        "      });\n",
        "    };\n",
        "\n",
        "    //Delete board dialog\n",
        "    $scope.deleteBoardDialog = function(index, board) {\n",
        "      var dialog = $mdDialog.confirm()\n",
        "            .title('Delete board')\n",
        "            .textContent('Are you sure you want to delete this board? All associated cards will be deleted')\n",
        "            .ariaLabel('Delete board')\n",
        "            .ok('ok')\n",
        "            .cancel('cancel');\n",
        "      $mdDialog.show(dialog).then(function() {\n",
        "        $scope.deleteBoard(index, board);\n",
        "        }, function() {\n",
        "          //cancel\n",
        "        });\n",
        "    };\n",
        "\n",
        "    //Get all user boards (and cards) when enter or refresh the application\n",
        "    $scope.getBoardsAndCards();\n",
        "  };\n",
        "\n",
        "  kanbanController.$inject = ['$scope', '$mdSidenav', '$log', '$mdDialog', '$mdToast',\n",
        "  '$location', '$window', '$interval', 'kanbanFactory', 'dragulaService'];\n",
        "\n",
        "  angular.module('kanban-board')\n",
        "    .controller('kanbanController', kanbanController);\n",
        "\n",
        "}());"
      ]
    }
  ]
}